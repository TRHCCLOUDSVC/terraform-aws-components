<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Glossary on Cloud Posse Developer Hub</title>
    <link>https://cloudposse.github.io/docs/glossary/</link>
    <description>Recent content in Glossary on Cloud Posse Developer Hub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://cloudposse.github.io/docs/glossary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>12-Factor</title>
      <link>https://cloudposse.github.io/docs/glossary/12-factor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/12-factor/</guid>
      <description>The 12-Factor pattern is a language agnostic, “Best Practice” for writing Cloud Native applications that can be easily and consistently deployed using Continuous Integration and Continuous Delivery (“CI/CD”).
The pattern can be summed up as:
 (a) treat all apps as disposable services that receive their configuration via environment variables; (b) rely on backing services to provide durability; (c) script all changes; and (d) treat all environments (dev, prod, qa, etc) as identical.</description>
    </item>
    
    <item>
      <title>Amazon Certificate Manager (ACM)</title>
      <link>https://cloudposse.github.io/docs/glossary/acm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/acm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Amazon Machine Image (AMI)</title>
      <link>https://cloudposse.github.io/docs/glossary/ami/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ami/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Amazon Systems Manager (SSM)</title>
      <link>https://cloudposse.github.io/docs/glossary/ssm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ssm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Anti-Pattern</title>
      <link>https://cloudposse.github.io/docs/glossary/anti-pattern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/anti-pattern/</guid>
      <description>An anti-pattern is a common response to a recurring problem that is usually ineffective and risks being highly counterproductive. See best-practices.</description>
    </item>
    
    <item>
      <title>Availability Zone (AZ)</title>
      <link>https://cloudposse.github.io/docs/glossary/availability-zone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/availability-zone/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://cloudposse.github.io/docs/glossary/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/aws/</guid>
      <description>Amazon Web Services is a public cloud offering from Amazon. It&amp;rsquo;s also a command line tool (aws) use to control services running on the platform.</description>
    </item>
    
    <item>
      <title>aws-vault</title>
      <link>https://cloudposse.github.io/docs/glossary/aws-vault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/aws-vault/</guid>
      <description>aws-vault is a utility for securely managing secrets with AWS Systems Manager (SSM) Parameter Store and KMS</description>
    </item>
    
    <item>
      <title>Bastion</title>
      <link>https://cloudposse.github.io/docs/glossary/bastion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/bastion/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Best Practices</title>
      <link>https://cloudposse.github.io/docs/glossary/best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/best-practices/</guid>
      <description></description>
    </item>
    
    <item>
      <title>BeyondCorp</title>
      <link>https://cloudposse.github.io/docs/glossary/beyondcorp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/beyondcorp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Build Harness</title>
      <link>https://cloudposse.github.io/docs/glossary/build-harness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/build-harness/</guid>
      <description>The primary benefit of using a build-harness is it allows for the consolidation of business logic related to building software. This allows to keep things DRY. Using a centralized repo that can be versioned and shared across multiple projects reduces long-term technical debt associated with building and releasing software by reducing maintenance effort.
We provide one that we use in nearly all of our projects. It&amp;rsquo;s available here: https://github.com/cloudposse/build-harness</description>
    </item>
    
    <item>
      <title>Business Logic</title>
      <link>https://cloudposse.github.io/docs/glossary/business-logic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/business-logic/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Chamber</title>
      <link>https://cloudposse.github.io/docs/glossary/chamber/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/chamber/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Change Management</title>
      <link>https://cloudposse.github.io/docs/glossary/change-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/change-control/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Chart Registry</title>
      <link>https://cloudposse.github.io/docs/glossary/chart-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/chart-registry/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CLI</title>
      <link>https://cloudposse.github.io/docs/glossary/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cli/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ClickOps</title>
      <link>https://cloudposse.github.io/docs/glossary/clickops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/clickops/</guid>
      <description>ClickOps is the error-prone and time-consuming process of having people click-through various menu options in cloud providers’ websites, to select and configure the correct automated computing infrastructure. This is typically coupled with WikiOps processes and is considered bad practice in the modern cloud era.</description>
    </item>
    
    <item>
      <title>Cloud Posse, LLC</title>
      <link>https://cloudposse.github.io/docs/glossary/cloudposse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cloudposse/</guid>
      <description>Cloud Posse is a DevOps Accelerator. Let us know how we can help. Reach us at hello@cloudposse.com.</description>
    </item>
    
    <item>
      <title>CloudFront</title>
      <link>https://cloudposse.github.io/docs/glossary/cloudfront/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cloudfront/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CloudTrail</title>
      <link>https://cloudposse.github.io/docs/glossary/cloudtrail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cloudtrail/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CloudWatch</title>
      <link>https://cloudposse.github.io/docs/glossary/cloudwatch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cloudwatch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CloudWatch Logs</title>
      <link>https://cloudposse.github.io/docs/glossary/cloudwatch-logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cloudwatch-logs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Code Review (CR)</title>
      <link>https://cloudposse.github.io/docs/glossary/code-review/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/code-review/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CodeBuild</title>
      <link>https://cloudposse.github.io/docs/glossary/code-build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/code-build/</guid>
      <description>CodeBuild scales continuously and processes multiple builds concurrently, so your builds are not left waiting in a queue. Because CodeBuild runs in AWS, it can leverage IAM Instance Profiles to assume roles to securely provision resources without exposing AWS access credentials.</description>
    </item>
    
    <item>
      <title>CodeDeploy</title>
      <link>https://cloudposse.github.io/docs/glossary/code-deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/code-deploy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Codefresh</title>
      <link>https://cloudposse.github.io/docs/glossary/codefresh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/codefresh/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CodePipeline</title>
      <link>https://cloudposse.github.io/docs/glossary/code-pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/code-pipeline/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Container Management Platform (CMP)</title>
      <link>https://cloudposse.github.io/docs/glossary/cmp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cmp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Continuous Delivery (CD)</title>
      <link>https://cloudposse.github.io/docs/glossary/continuous-delivery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/continuous-delivery/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Continuous Integration (CI)</title>
      <link>https://cloudposse.github.io/docs/glossary/continuous-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/continuous-integration/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Continuous Integration / Continuous Delivery (CI/CD)</title>
      <link>https://cloudposse.github.io/docs/glossary/cicd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/cicd/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create, Read, Update, Delete (CRUD)</title>
      <link>https://cloudposse.github.io/docs/glossary/crud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/crud/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Declarative Declaration</title>
      <link>https://cloudposse.github.io/docs/glossary/declarative/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/declarative/</guid>
      <description>References  https://en.wikipedia.org/wiki/Infrastructure_as_Code#Types_of_approaches  </description>
    </item>
    
    <item>
      <title>Docker Compose</title>
      <link>https://cloudposse.github.io/docs/glossary/docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/docker-compose/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Docker Image</title>
      <link>https://cloudposse.github.io/docs/glossary/docker-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/docker-image/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Docker Registry</title>
      <link>https://cloudposse.github.io/docs/glossary/docker-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/docker-registry/</guid>
      <description>It works together with the docker push and docker pull commands for standard CRUD operations.</description>
    </item>
    
    <item>
      <title>Dockerfile</title>
      <link>https://cloudposse.github.io/docs/glossary/dockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/dockerfile/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Don&#39;t Repeat Yourself (DRY)</title>
      <link>https://cloudposse.github.io/docs/glossary/dry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/dry/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ECS</title>
      <link>https://cloudposse.github.io/docs/glossary/ecs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ecs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ECS Agent</title>
      <link>https://cloudposse.github.io/docs/glossary/ecs-agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ecs-agent/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ECS Service</title>
      <link>https://cloudposse.github.io/docs/glossary/ecs-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ecs-service/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ECS Task</title>
      <link>https://cloudposse.github.io/docs/glossary/ecs-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ecs-task/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Elastic Container Registry (ECR)</title>
      <link>https://cloudposse.github.io/docs/glossary/ecr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ecr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ElasticBeanstalk (EB)</title>
      <link>https://cloudposse.github.io/docs/glossary/eb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/eb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>End-to-end (e2e)</title>
      <link>https://cloudposse.github.io/docs/glossary/e2e/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/e2e/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Environment Variable</title>
      <link>https://cloudposse.github.io/docs/glossary/environment-variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/environment-variable/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Executable Documentation</title>
      <link>https://cloudposse.github.io/docs/glossary/executable-documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/executable-documentation/</guid>
      <description>We treat Makefiles as executable documentation. That is, for every target we add a meaningful annotations (e.g. ## Build docker container). The end-user can then choose to run the target (e.g. make build) or run the command described in the target (e.g. docker build -t example/image .).</description>
    </item>
    
    <item>
      <title>FUSE</title>
      <link>https://cloudposse.github.io/docs/glossary/fuse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/fuse/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Geodesic</title>
      <link>https://cloudposse.github.io/docs/glossary/geodesic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/geodesic/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Geodesic Module</title>
      <link>https://cloudposse.github.io/docs/glossary/geodesic-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/geodesic-module/</guid>
      <description>Usually we create geodesic modules that correspond to each AWS organization.
For example, the standard geodesic modules are:
 root.cloudposse.org - a module which is reponsible for administering the root AWS account and provisioning all subaccounts (organizations). prod.cloudposse.org - a module which is responsible for provisioning all production infrastructure including production kops clusters and backing services (E.g. rds) staging.cloudposse.org - a module which is responsible for provisioning all staging resources dev.</description>
    </item>
    
    <item>
      <title>Geodesic Shell</title>
      <link>https://cloudposse.github.io/docs/glossary/geodesic-shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/geodesic-shell/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Git Workflow</title>
      <link>https://cloudposse.github.io/docs/glossary/git-workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/git-workflow/</guid>
      <description>In the Git Workflow, the master branch is often treated as the pristine copy of the code base and considered always safe to deploy to production. Everytime a change is needed, a developer will open up a new branch against master and push their changes up to the origin. When the developer is ready to merge their changes, they open up a Pull Request and request one of their peers to perform a Code Review.</description>
    </item>
    
    <item>
      <title>Goofys</title>
      <link>https://cloudposse.github.io/docs/glossary/goofys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/goofys/</guid>
      <description>goofys is a a high-performance, POSIX-ish Amazon S3 file system written in Go. We use goofys in Geodesic</description>
    </item>
    
    <item>
      <title>HashiCorp Language (HCL)</title>
      <link>https://cloudposse.github.io/docs/glossary/hcl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/hcl/</guid>
      <description>The HashiCorp Configuration language was designed to be both human readable and machine friendly. It used by most HashiCorp tools such as terraform. The nice thing about HCL is also fully JSON compatible, which means that JSON can be used anywhere HCL is expected. By supporting JSON backwards compatibility, HCL remains interoperable with other systems.
Here&amp;rsquo;s an example of HCL:
variable &amp;#34;ami&amp;#34; { description = &amp;#34;the AMI to use&amp;#34; } </description>
    </item>
    
    <item>
      <title>HashiCorp Terraform</title>
      <link>https://cloudposse.github.io/docs/glossary/terraform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/terraform/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Helm</title>
      <link>https://cloudposse.github.io/docs/glossary/helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/helm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Helm Chart</title>
      <link>https://cloudposse.github.io/docs/glossary/helm-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/helm-chart/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Helm Tiller</title>
      <link>https://cloudposse.github.io/docs/glossary/helm-tiller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/helm-tiller/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Idenity Aware Proxy</title>
      <link>https://cloudposse.github.io/docs/glossary/iap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/iap/</guid>
      <description>An Identity-Aware Proxy enables an organization to control access to cloud applications (e.g. SaaS). Typically, an IAP works together with an organization’s Single Sign-on (SSO) provide for verifying a user’s identity and determining if that user should be allowed to access the application.
The IAP is part of the BeyondCorp enterprise security model pioneered by Google. It enables every employee to work from untrusted networks without the use of a VPN.</description>
    </item>
    
    <item>
      <title>Identity Access Management (IAM)</title>
      <link>https://cloudposse.github.io/docs/glossary/iam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/iam/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Imperative Declaration</title>
      <link>https://cloudposse.github.io/docs/glossary/imperative/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/imperative/</guid>
      <description>References  https://en.wikipedia.org/wiki/Infrastructure_as_Code#Types_of_approaches  </description>
    </item>
    
    <item>
      <title>Infrastructure</title>
      <link>https://cloudposse.github.io/docs/glossary/infrastructure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/infrastructure/</guid>
      <description>Infrastructure is everything that supports running your software.</description>
    </item>
    
    <item>
      <title>Infrastructure as Code (IaC)</title>
      <link>https://cloudposse.github.io/docs/glossary/infrastructure-as-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/infrastructure-as-code/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ingress Controller</title>
      <link>https://cloudposse.github.io/docs/glossary/ingress-controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/ingress-controller/</guid>
      <description>The Kubernetes Ingress Controller is a native resource type in Kubernetes that functions like a Layer 7 Load Balancer (e.g. HTTP Load Balancer) to route requests to various backend services based on incoming hostname (e.g. Host header) and request path (e.g. /foo).
The default Ingress Controller in Kubernetes is powered by Nginx, but this is an implementation detail that is entirely abstracted away from the end user. There are many vendors, in addition to Nginx providing alternative implementations.</description>
    </item>
    
    <item>
      <title>init-terraform</title>
      <link>https://cloudposse.github.io/docs/glossary/init-terraform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/init-terraform/</guid>
      <description></description>
    </item>
    
    <item>
      <title>jq</title>
      <link>https://cloudposse.github.io/docs/glossary/jq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/jq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kanban</title>
      <link>https://cloudposse.github.io/docs/glossary/kanban/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/kanban/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Key Management Service (KMS)</title>
      <link>https://cloudposse.github.io/docs/glossary/kms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/kms/</guid>
      <description>AWS Key Management Service is integrated with most other AWS services to help you protect the data you store with these services. AWS Key Management Service is also integrated with AWS CloudTrail to provide you with logs of all key usage to help meet your regulatory and compliance needs.</description>
    </item>
    
    <item>
      <title>Key Performance Indicator (KPI)</title>
      <link>https://cloudposse.github.io/docs/glossary/kpi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/kpi/</guid>
      <description>A Key Performance Indicator is a metric (e.g. number of requests per second) that indicates if some key business objective is being satisfied. Since it’s a metric, it means that it must be able of being measured or quantified. Businesses usually use multiple KPIs to evaluate their success at reaching concrete targets.</description>
    </item>
    
    <item>
      <title>kubectl</title>
      <link>https://cloudposse.github.io/docs/glossary/kubectl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/kubectl/</guid>
      <description>kubectl is a cli for controlling Kubernetes clusters. It&amp;rsquo;s officially pronounced as &amp;ldquo;kube control&amp;rdquo;, but we&amp;rsquo;ll always refer to it as &amp;ldquo;kube cuddle&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://cloudposse.github.io/docs/glossary/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/kubernetes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes Ops (kops)</title>
      <link>https://cloudposse.github.io/docs/glossary/kops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/kops/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lambda</title>
      <link>https://cloudposse.github.io/docs/glossary/lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/lambda/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Layer 7</title>
      <link>https://cloudposse.github.io/docs/glossary/layer-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/layer-7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Monorepo</title>
      <link>https://cloudposse.github.io/docs/glossary/monorepo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/monorepo/</guid>
      <description>See also polyrepo.</description>
    </item>
    
    <item>
      <title>Multi-Factor Authentication (MFA)</title>
      <link>https://cloudposse.github.io/docs/glossary/mfa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/mfa/</guid>
      <description>There are a lot of terms that roughly mean the same thing.
 MFA - Multi-factor Authentication OTP - One-time password (~MFA Token) 2FA - Two-factor authentication  </description>
    </item>
    
    <item>
      <title>On-call Engineer (OCE)</title>
      <link>https://cloudposse.github.io/docs/glossary/oce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/oce/</guid>
      <description></description>
    </item>
    
    <item>
      <title>OSI Model</title>
      <link>https://cloudposse.github.io/docs/glossary/osi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/osi/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PagerDuty</title>
      <link>https://cloudposse.github.io/docs/glossary/pagerduty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/pagerduty/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Parameter Store</title>
      <link>https://cloudposse.github.io/docs/glossary/parameter-store/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/parameter-store/</guid>
      <description>The Amazon Systems Manager Parameter Store provides secure, hierarchical storage for configuration data management and secrets management.
You can store data such as passwords, database strings, and license codes as parameter values. You can store values as plain text or encrypted data using KMS. You can then reference values by using the unique name that you specified when you created the parameter. Highly scalable, available, and durable, Parameter Store is backed by the AWS Cloud.</description>
    </item>
    
    <item>
      <title>Pingdom</title>
      <link>https://cloudposse.github.io/docs/glossary/pingdom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/pingdom/</guid>
      <description>Pingdom is a service that tracks the availability (e.g. uptime &amp;amp; downtime) as well as the performance of websites. It’s been around for ages and is a tried-and-true method for being alerted when there’s an outage. They also have a feature called “Real User Monitoring” that uses a little bit of javascript to determine how fast your pages are loading for real end-users. Real-user-monitoring is essential for catching brown-outs where the site might be “up” but degraded.</description>
    </item>
    
    <item>
      <title>Platform-as-a-Service (PaaS)</title>
      <link>https://cloudposse.github.io/docs/glossary/paas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/paas/</guid>
      <description>A Platform-as-a-Service is a type of cloud platform which offers black-box services that enable developers to build applications on top of the compute infrastructure without needing to deal with the day-to-day maintenance of the infrastructure. This might include developer tools that are offered as a service to build services, or data access and database services, or billing services.</description>
    </item>
    
    <item>
      <title>Polyrepo</title>
      <link>https://cloudposse.github.io/docs/glossary/polyrepo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/polyrepo/</guid>
      <description>See also monorepo.</description>
    </item>
    
    <item>
      <title>Relational Database Service (RDS)</title>
      <link>https://cloudposse.github.io/docs/glossary/rds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/rds/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Release Engineering</title>
      <link>https://cloudposse.github.io/docs/glossary/release-engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/release-engineering/</guid>
      <description></description>
    </item>
    
    <item>
      <title>S3</title>
      <link>https://cloudposse.github.io/docs/glossary/s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/s3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>S3 Bucket</title>
      <link>https://cloudposse.github.io/docs/glossary/s3-bucket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/s3-bucket/</guid>
      <description>Think of an S3 bucket as a top-level folder. It must be globally unique on AWS across all customers and accounts.</description>
    </item>
    
    <item>
      <title>s3fs</title>
      <link>https://cloudposse.github.io/docs/glossary/s3fs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/s3fs/</guid>
      <description>The geodesic implements an s3fs using goofys.</description>
    </item>
    
    <item>
      <title>Sandbox Environment</title>
      <link>https://cloudposse.github.io/docs/glossary/sandbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sandbox/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Semantic Version</title>
      <link>https://cloudposse.github.io/docs/glossary/semver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/semver/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Service Level Agreement</title>
      <link>https://cloudposse.github.io/docs/glossary/sla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sla/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Shared Memory Filesystem (/dev/shm)</title>
      <link>https://cloudposse.github.io/docs/glossary/dev-shm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/dev-shm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sidekick Containers</title>
      <link>https://cloudposse.github.io/docs/glossary/sidekick-containers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sidekick-containers/</guid>
      <description>Examples of common sidekick containers are for service discovery or loading fixtures into a development database.</description>
    </item>
    
    <item>
      <title>Simple Notification Service (SNS)</title>
      <link>https://cloudposse.github.io/docs/glossary/sns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sns/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Single Sign-on (SSO)</title>
      <link>https://cloudposse.github.io/docs/glossary/sso/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sso/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slack</title>
      <link>https://cloudposse.github.io/docs/glossary/slack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/slack/</guid>
      <description>Visit Slack.com for more details.</description>
    </item>
    
    <item>
      <title>Software Development Lifecycle (SDLC)</title>
      <link>https://cloudposse.github.io/docs/glossary/sdlc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sdlc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Software-as-a-Service (SaaS)</title>
      <link>https://cloudposse.github.io/docs/glossary/saas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/saas/</guid>
      <description>Sofware-as-a-Service is a form of a cloud services platform, whereby the computing platform (operating system and associated services) is delivered as a service over the Internet by the provider.</description>
    </item>
    
    <item>
      <title>Stage</title>
      <link>https://cloudposse.github.io/docs/glossary/stage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/stage/</guid>
      <description>It&amp;rsquo;s important to note that within a given stage, there might be multiple environments. We always prescribe separating multiple stages by using multiple AWS accounts or organizational units. Then provisioning multiple environments within that stage as necessary.
For example, the &amp;ldquo;staging&amp;rdquo; account might run &amp;ldquo;pre-production&amp;rdquo; and &amp;ldquo;QA&amp;rdquo; environments.</description>
    </item>
    
    <item>
      <title>String Interpolation</title>
      <link>https://cloudposse.github.io/docs/glossary/interpolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/interpolation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Subject Matter Expertise (SME)</title>
      <link>https://cloudposse.github.io/docs/glossary/sme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/sme/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Synthetic Monitoring</title>
      <link>https://cloudposse.github.io/docs/glossary/synthetic-monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/synthetic-monitoring/</guid>
      <description>Synthetic monitoring is a style of monitoring that attempts to closely emulate the behavior of an end-user, often by using scripted recordings of web transactions played back through a web browser using plugin like Selenium. The scripts carry out behaviors (such as traversing paths) to simulate an action that a customer or end-user would take on a site. E.g. we highly recommend testing all user registration flows and password reset forms using this methodology.</description>
    </item>
    
    <item>
      <title>Technical Debt</title>
      <link>https://cloudposse.github.io/docs/glossary/technical-debt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/technical-debt/</guid>
      <description>It should be noted that the cost of tech debt is very real. It manifests in the form of engineering costs to address the problem, opportunity costs of fixing it versus working on new features, and business costs such as lost revenue from frustrated customers.</description>
    </item>
    
    <item>
      <title>Terraform Root Module</title>
      <link>https://cloudposse.github.io/docs/glossary/root-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/root-module/</guid>
      <description>Terraform has two types of modules; the top-level module is always called the &amp;ldquo;root&amp;rdquo; module and the modules that are called from the root module are called &amp;ldquo;child&amp;rdquo; modules. Root modules are the most opinionated. They describe the architecture you want to deploy. It&amp;rsquo;s these &amp;ldquo;root&amp;rdquo; modules that we actually deploy when we run the terraform apply command. The &amp;ldquo;root&amp;rdquo; modules may contain many child modules or none at all. The &amp;ldquo;child&amp;rdquo; modules reusable modules that we invoke in root modules.</description>
    </item>
    
    <item>
      <title>The curl-bash pattern</title>
      <link>https://cloudposse.github.io/docs/glossary/curl-bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/curl-bash/</guid>
      <description>The curl-bash pattern is an approach to installing software on your local machine via your terminal. It utilizes curl to download a script which is then piped (i.e. | ) into bash. This enables the script to execute code on your machine which then does whatever setup or installation steps it needs to do to install the target software. Example:
curl -sSL https://get.rvm.io | bash </description>
    </item>
    
    <item>
      <title>The docker-bash pattern</title>
      <link>https://cloudposse.github.io/docs/glossary/docker-bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/docker-bash/</guid>
      <description>The docker-bash pattern is an approach to installing software on your local machine via your terminal and docker. It utilizes docker run to output a script which is then piped (i.e. | ) into bash. This enables the script to execute code on your machine which then does whatever setup or installation steps it needs to do to install the target software. Geodesic utilizes this pattern via the init script which is expected to be piped into bash:</description>
    </item>
    
    <item>
      <title>Topology</title>
      <link>https://cloudposse.github.io/docs/glossary/topology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/topology/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Unlimited Staging Environments</title>
      <link>https://cloudposse.github.io/docs/glossary/unlimited-staging-environments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/unlimited-staging-environments/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Virtual Private Cloud (VPC)</title>
      <link>https://cloudposse.github.io/docs/glossary/vpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/vpc/</guid>
      <description>A virtual private cloud (“VPC”) is an isolated environment running inside of a public cloud. You can think of it like a private data center with its own private subnets and resources. A VPC can also be an extension of a physical datacenter. The most common example of a VPC is the service that Amazon offers called “Amazon VPC” which allows customers to make Amazon EC2 an extension to their physical infrastructure using an IPsec VPN tunnel.</description>
    </item>
    
    <item>
      <title>WikiOps</title>
      <link>https://cloudposse.github.io/docs/glossary/wikiops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/wikiops/</guid>
      <description>WikiOps is the pattern of following Wiki-style documentation as the means of building and operating your infrastructure. This is to be avoided as it relies on ClickOps and documentation that becomes quickly outdated and inconsistent.</description>
    </item>
    
    <item>
      <title>YAML</title>
      <link>https://cloudposse.github.io/docs/glossary/yaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/yaml/</guid>
      <description>YAML is a configuration syntax (aka data-serialization format) that is pervasive throughout the DevOps community. It is a superset of the popular JSON configuration format but provides a more concise, human-readable interface while also supporting value inheritance via anchors.</description>
    </item>
    
    <item>
      <title>yq</title>
      <link>https://cloudposse.github.io/docs/glossary/yq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudposse.github.io/docs/glossary/yq/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
